{"version":3,"sources":["webpack:///./src/templates/page.tsx","webpack:///./src/components/SEO.tsx"],"names":["Page","path","pageContext","preview","main","modules","slug","meta","url","current","className","metaInfo","pagePath","RenderModules","siteRoute","SEO","title","metaTitle","metaDescription","ogImage","openImage","asset","twitterImage","openTitle","openGraphDescription","twitterTitle","twitterDescription","lang","http-equiv","content","property","name"],"mappings":"8FAAA,wDA+CeA,UA3BF,SAAC,GAIG,IAHfC,EAGe,EAHfA,KACAC,EAEe,EAFfA,YAEe,IADfC,eACe,WAOXD,EALFE,KACEC,EAHW,EAGXA,QACAC,EAJW,EAIXA,KAEFC,EACEL,EADFK,KAGIC,EAAuB,SAAjBF,EAAKG,QAAqB,GAAKR,EAC3C,OACE,yBAAKS,UAAU,YACZP,GACC,yBAAKO,UAAU,qBAAf,qBAEF,kBAAC,IAAD,CAAKC,SAAUJ,EAAMK,SAAUJ,IAC/B,yBAAKE,UAAU,yCACZG,YAAcR,O,oCCzCvB,gFAGMS,EAAY,qCAELC,EAAM,SAAC,GAed,IAdJH,EAcI,EAdJA,SACAD,EAaI,EAbJA,SAcMK,EAAQL,GACVA,EAASM,UACPN,EAASM,UAEX,SACEC,EAAkBP,GACpBA,EAASO,gBACPP,EAASO,gBAEX,+DAEEC,EAAUR,GACZA,EAASS,UACPT,EAASS,UAAUC,MAAMb,IAE3B,GACEc,EAAeX,GACjBA,EAASW,aACPX,EAASW,aAAaD,MAAMb,IAE9B,GACEe,EAAYZ,GACdA,EAASY,UACPZ,EAASY,UAEXP,EACEQ,EAAuBb,GACzBA,EAASa,qBACPb,EAASa,qBAEXN,EACEO,EAAed,GACjBA,EAASc,aACPd,EAASc,aAEXT,EACEU,EAAqBf,GACvBA,EAASe,mBACPf,EAASe,mBAEXR,EACJ,OACE,kBAAC,IAAD,CAAQF,MAAOA,GACb,0BAAMW,KAAK,OACX,0BAAMC,aAAW,YAAYC,QAAQ,+BACrC,0BAAMC,SAAS,YAAYD,QAAQ,UACnC,0BAAME,KAAK,cAAcF,QAASX,IAClC,0BAAMa,KAAK,WAAWF,QArCL,8CAsCjB,0BACEC,SAAS,SACTD,QAAYf,EAAL,KAAkBF,GAAsB,MAEjD,0BAAMkB,SAAS,WAAWD,QAASV,IACnC,0BAAMW,SAAS,WAAWD,QAAO,GAAKN,IACtC,0BAAMO,SAAS,eAAeD,QAAQ,WACtC,0BAAMC,SAAS,iBAAiBD,QAASL,IACzC,0BAAMO,KAAK,eAAeF,QAAQ,YAClC,0BAAME,KAAK,eAAeF,QAAQ,wBAClC,0BAAME,KAAK,gBAAgBF,QAAO,GAAKJ,IACvC,0BAAMM,KAAK,oBAAoBF,QAASP,IACxC,0BAAMS,KAAK,sBAAsBF,QAASH,IAC1C,0BACEK,KAAK,cACLF,QAAYf,EAAL,KAAkBF,GAAsB","file":"component---src-templates-page-tsx-4df6ef66b0ebe49f266c.js","sourcesContent":["import React from 'react'\r\n\r\nimport { RenderModules } from 'src/utils/renderModules'\r\nimport { SEO } from 'src/components/SEO'\r\n\r\nexport interface PageProps {\r\n  pageContext: {\r\n    main: {\r\n      modules: [],\r\n      slug: {\r\n        current: string\r\n      },\r\n      title: string\r\n    },\r\n    meta: {}\r\n  }\r\n  path?: string\r\n  preview?: boolean\r\n}\r\n\r\nconst Page = ({\r\n  path,\r\n  pageContext,\r\n  preview = false\r\n}: PageProps) => {\r\n  const {\r\n    main: {\r\n      modules,\r\n      slug\r\n    },\r\n    meta\r\n  } = pageContext\r\n\r\n  const url = slug.current === 'home' ? '' : path\r\n  return (\r\n    <div className='mt1 x ac'>\r\n      {preview && (\r\n        <div className='bcblue ac cw x p1'>This is a Preview</div>\r\n      )}\r\n      <SEO metaInfo={meta} pagePath={url} />\r\n      <div className='container--1000 mt2 pt6--800 mxa x al'>\r\n        {RenderModules(modules)}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Page","import React from \"react\"\r\nimport Helmet from \"react-helmet\"\r\n\r\nconst siteRoute = \"https://midway-starter.netlify.com\"\r\n\r\nexport const SEO = ({\r\n  pagePath,\r\n  metaInfo,\r\n}: {\r\n  pagePath: string\r\n  metaInfo: {\r\n    metaTitle?: string\r\n    metaDescription?: string\r\n    openImage?: string\r\n    twitterImage?: string\r\n    twitterTitle?: string\r\n    openTitle?: string\r\n    openGraphDescription?: string\r\n    twitterDescription?: string\r\n  }\r\n}) => {\r\n  const title = metaInfo\r\n    ? metaInfo.metaTitle\r\n      ? metaInfo.metaTitle\r\n      : \"Midway\"\r\n    : \"Midway\"\r\n  const metaDescription = metaInfo\r\n    ? metaInfo.metaDescription\r\n      ? metaInfo.metaDescription\r\n      : \"Midway is an Open source Headless  Shopify + Sanity starter.\"\r\n    : \"Midway is an Open source Headless  Shopify + Sanity starter.\"\r\n  const metaKeywords = \"midway, sanity, shopify, graphql, starter\"\r\n  const ogImage = metaInfo\r\n    ? metaInfo.openImage\r\n      ? metaInfo.openImage.asset.url\r\n      : \"\"\r\n    : \"\"\r\n  const twitterImage = metaInfo\r\n    ? metaInfo.twitterImage\r\n      ? metaInfo.twitterImage.asset.url\r\n      : \"\"\r\n    : \"\"\r\n  const openTitle = metaInfo\r\n    ? metaInfo.openTitle\r\n      ? metaInfo.openTitle\r\n      : title\r\n    : title\r\n  const openGraphDescription = metaInfo\r\n    ? metaInfo.openGraphDescription\r\n      ? metaInfo.openGraphDescription\r\n      : metaDescription\r\n    : metaDescription\r\n  const twitterTitle = metaInfo\r\n    ? metaInfo.twitterTitle\r\n      ? metaInfo.twitterTitle\r\n      : title\r\n    : title\r\n  const twitterDescription = metaInfo\r\n    ? metaInfo.twitterDescription\r\n      ? metaInfo.twitterDescription\r\n      : metaDescription\r\n    : metaDescription\r\n  return (\r\n    <Helmet title={title}>\r\n      <html lang=\"en\" />\r\n      <meta http-equiv=\"Accept-CH\" content=\"DPR, Width, Viewport-Width\" />\r\n      <meta property=\"og:locale\" content=\"en_US\" />\r\n      <meta name=\"description\" content={metaDescription} />\r\n      <meta name=\"keywords\" content={metaKeywords} />\r\n      <meta\r\n        property=\"og:url\"\r\n        content={`${siteRoute}/${pagePath ? pagePath : \"\"}`}\r\n      />\r\n      <meta property=\"og:image\" content={ogImage} />\r\n      <meta property=\"og:title\" content={`${openTitle}`} />\r\n      <meta property=\"og:site_name\" content=\"Midway\" />\r\n      <meta property=\"og:description\" content={openGraphDescription} />\r\n      <meta name=\"twitter:site\" content=\"@Midway\" />\r\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\r\n      <meta name=\"twitter:title\" content={`${twitterTitle}`} />\r\n      <meta name=\"twitter:image:src\" content={twitterImage} />\r\n      <meta name=\"twitter:description\" content={twitterDescription} />\r\n      <meta\r\n        name=\"twitter:url\"\r\n        content={`${siteRoute}/${pagePath ? pagePath : \"\"}`}\r\n      />\r\n    </Helmet>\r\n  )\r\n}\r\n"],"sourceRoot":""}