{"version":3,"sources":["webpack:///./node_modules/isarray/index.js","webpack:///./node_modules/base64-js/index.js","webpack:///./node_modules/shopify-gid/dist/shopify-gid.es.js","webpack:///./node_modules/ieee754/index.js","webpack:///./node_modules/buffer/index.js"],"names":["toString","module","exports","Array","isArray","arr","call","byteLength","b64","lens","getLens","validLen","placeHoldersLen","toByteArray","tmp","i","Arr","_byteLength","curByte","len","revLookup","charCodeAt","fromByteArray","uint8","length","extraBytes","parts","len2","push","encodeChunk","lookup","join","Uint8Array","code","Error","indexOf","start","end","num","output","t","window","Buffer","from","atob","split","e","r","n","slice","reduce","type","id","params","raw","f","Object","keys","o","btoa","read","buffer","offset","isLE","mLen","nBytes","m","eLen","eMax","eBias","nBits","d","s","NaN","Infinity","Math","pow","write","value","c","rt","abs","isNaN","floor","log","LN2","base64","ieee754","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","__proto__","prototype","arg","encodingOrOffset","this","allocUnsafe","TypeError","ArrayBuffer","array","byteOffset","undefined","fromArrayLike","fromArrayBuffer","string","encoding","isEncoding","actual","fromString","obj","isBuffer","checked","copy","val","data","fromObject","assertSize","size","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","b","bidirectionalIndexOf","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","String","buf","readUInt16BE","foundIndex","found","j","hexWrite","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","fromCharCode","apply","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","global","foo","subarray","typedArraySupport","poolSize","_augment","Symbol","species","defineProperty","configurable","fill","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","swap16","swap32","swap64","arguments","equals","inspect","max","match","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","INVALID_BASE64_RE","leadSurrogate","trim","replace","stringtrim","base64clean","src","dst"],"mappings":"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","file":"5aa9645ff462303488dae1fffbf882784e8dca21-f34bae6fdad9d7924789.js","sourcesContent":["var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};","'use strict';\n\nexports.byteLength = byteLength;\nexports.toByteArray = toByteArray;\nexports.fromByteArray = fromByteArray;\nvar lookup = [];\nvar revLookup = [];\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i];\n  revLookup[code.charCodeAt(i)] = i;\n} // Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\n\n\nrevLookup['-'.charCodeAt(0)] = 62;\nrevLookup['_'.charCodeAt(0)] = 63;\n\nfunction getLens(b64) {\n  var len = b64.length;\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4');\n  } // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n\n\n  var validLen = b64.indexOf('=');\n  if (validLen === -1) validLen = len;\n  var placeHoldersLen = validLen === len ? 0 : 4 - validLen % 4;\n  return [validLen, placeHoldersLen];\n} // base64 is 4/3 + up to two characters of the original data\n\n\nfunction byteLength(b64) {\n  var lens = getLens(b64);\n  var validLen = lens[0];\n  var placeHoldersLen = lens[1];\n  return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\n\nfunction _byteLength(b64, validLen, placeHoldersLen) {\n  return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\n\nfunction toByteArray(b64) {\n  var tmp;\n  var lens = getLens(b64);\n  var validLen = lens[0];\n  var placeHoldersLen = lens[1];\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));\n  var curByte = 0; // if there are placeholders, only get up to the last complete 4 chars\n\n  var len = placeHoldersLen > 0 ? validLen - 4 : validLen;\n  var i;\n\n  for (i = 0; i < len; i += 4) {\n    tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];\n    arr[curByte++] = tmp >> 16 & 0xFF;\n    arr[curByte++] = tmp >> 8 & 0xFF;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;\n    arr[curByte++] = tmp >> 8 & 0xFF;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  return arr;\n}\n\nfunction tripletToBase64(num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F];\n}\n\nfunction encodeChunk(uint8, start, end) {\n  var tmp;\n  var output = [];\n\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16 & 0xFF0000) + (uint8[i + 1] << 8 & 0xFF00) + (uint8[i + 2] & 0xFF);\n    output.push(tripletToBase64(tmp));\n  }\n\n  return output.join('');\n}\n\nfunction fromByteArray(uint8) {\n  var tmp;\n  var len = uint8.length;\n  var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes\n\n  var parts = [];\n  var maxChunkLength = 16383; // must be multiple of 3\n  // go through the array every three bytes, we'll deal with trailing stuff later\n\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));\n  } // pad the end with zeros, but make sure to not forget the extra bytes\n\n\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1];\n    parts.push(lookup[tmp >> 2] + lookup[tmp << 4 & 0x3F] + '==');\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1];\n    parts.push(lookup[tmp >> 10] + lookup[tmp >> 4 & 0x3F] + lookup[tmp << 2 & 0x3F] + '=');\n  }\n\n  return parts.join('');\n}","import \"core-js/modules/es.array.reduce\";\n\nfunction t(t) {\n  var i = (\"undefined\" == typeof window ? Buffer.from(t, \"base64\").toString(\"utf-8\") : atob(t)).split(\"shopify/\")[1].split(\"/\"),\n      e = i[0],\n      r = i[1],\n      n = (r.split(\"?\").slice(1)[0] || \"\").split(\"&\").reduce(function (t, i) {\n    var e = i.split(\"=\");\n    return t[e[0]] = e[1], t;\n  }, {});\n  return {\n    type: e,\n    id: r.split(\"?\")[0],\n    params: n,\n    raw: t\n  };\n}\n\nfunction i(t, i, e) {\n  void 0 === e && (e = {});\n  var r = \"gid://shopify/\" + t + \"/\" + i,\n      n = [],\n      f = Object.keys(e);\n\n  if (f.length > 0) {\n    for (var o = 0; o < f.length; o++) {\n      n.push(f[o] + \"=\" + e[f[o]]);\n    }\n\n    r += n = \"?\" + n.join(\"&\");\n  }\n\n  return \"undefined\" == typeof window ? Buffer.from(r, \"utf-8\").toString(\"base64\") : btoa(r);\n}\n\nexport { t as decode, i as encode };","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var nBits = -7;\n  var i = isLE ? nBytes - 1 : 0;\n  var d = isLE ? -1 : 1;\n  var s = buffer[offset + i];\n  i += d;\n  e = s & (1 << -nBits) - 1;\n  s >>= -nBits;\n  nBits += eLen;\n\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & (1 << -nBits) - 1;\n  e >>= -nBits;\n  nBits += mLen;\n\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : (s ? -1 : 1) * Infinity;\n  } else {\n    m = m + Math.pow(2, mLen);\n    e = e - eBias;\n  }\n\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n};\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;\n  var i = isLE ? 0 : nBytes - 1;\n  var d = isLE ? 1 : -1;\n  var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n  value = Math.abs(value);\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0;\n    e = eMax;\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2);\n\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * Math.pow(2, 1 - eBias);\n    }\n\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n      e = 0;\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = e << mLen | m;\n  eLen += mLen;\n\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128;\n};","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n\n/* eslint-disable no-proto */\n'use strict';\n\nvar base64 = require('base64-js');\n\nvar ieee754 = require('ieee754');\n\nvar isArray = require('isarray');\n\nexports.Buffer = Buffer;\nexports.SlowBuffer = SlowBuffer;\nexports.INSPECT_MAX_BYTES = 50;\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\n\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined ? global.TYPED_ARRAY_SUPPORT : typedArraySupport();\n/*\n * Export kMaxLength after typed array support is determined.\n */\n\nexports.kMaxLength = kMaxLength();\n\nfunction typedArraySupport() {\n  try {\n    var arr = new Uint8Array(1);\n    arr.__proto__ = {\n      __proto__: Uint8Array.prototype,\n      foo: function foo() {\n        return 42;\n      }\n    };\n    return arr.foo() === 42 && // typed array instances can be augmented\n    typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n    arr.subarray(1, 1).byteLength === 0; // ie10 has broken `subarray`\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction kMaxLength() {\n  return Buffer.TYPED_ARRAY_SUPPORT ? 0x7fffffff : 0x3fffffff;\n}\n\nfunction createBuffer(that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length');\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length);\n    that.__proto__ = Buffer.prototype;\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length);\n    }\n\n    that.length = length;\n  }\n\n  return that;\n}\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\n\nfunction Buffer(arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length);\n  } // Common case.\n\n\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error('If encoding is specified then the first argument must be a string');\n    }\n\n    return allocUnsafe(this, arg);\n  }\n\n  return from(this, arg, encodingOrOffset, length);\n}\n\nBuffer.poolSize = 8192; // not used by this implementation\n// TODO: Legacy, not needed anymore. Remove in next major version.\n\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype;\n  return arr;\n};\n\nfunction from(that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number');\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length);\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset);\n  }\n\n  return fromObject(that, value);\n}\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\n\n\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length);\n};\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype;\n  Buffer.__proto__ = Uint8Array;\n\n  if (typeof Symbol !== 'undefined' && Symbol.species && Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    });\n  }\n}\n\nfunction assertSize(size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number');\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative');\n  }\n}\n\nfunction alloc(that, size, fill, encoding) {\n  assertSize(size);\n\n  if (size <= 0) {\n    return createBuffer(that, size);\n  }\n\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string' ? createBuffer(that, size).fill(fill, encoding) : createBuffer(that, size).fill(fill);\n  }\n\n  return createBuffer(that, size);\n}\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\n\n\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding);\n};\n\nfunction allocUnsafe(that, size) {\n  assertSize(size);\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0);\n\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0;\n    }\n  }\n\n  return that;\n}\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\n\n\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size);\n};\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\n\n\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size);\n};\n\nfunction fromString(that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8';\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding');\n  }\n\n  var length = byteLength(string, encoding) | 0;\n  that = createBuffer(that, length);\n  var actual = that.write(string, encoding);\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual);\n  }\n\n  return that;\n}\n\nfunction fromArrayLike(that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0;\n  that = createBuffer(that, length);\n\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255;\n  }\n\n  return that;\n}\n\nfunction fromArrayBuffer(that, array, byteOffset, length) {\n  array.byteLength; // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds');\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds');\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array);\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset);\n  } else {\n    array = new Uint8Array(array, byteOffset, length);\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array;\n    that.__proto__ = Buffer.prototype;\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array);\n  }\n\n  return that;\n}\n\nfunction fromObject(that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0;\n    that = createBuffer(that, len);\n\n    if (that.length === 0) {\n      return that;\n    }\n\n    obj.copy(that, 0, 0, len);\n    return that;\n  }\n\n  if (obj) {\n    if (typeof ArrayBuffer !== 'undefined' && obj.buffer instanceof ArrayBuffer || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0);\n      }\n\n      return fromArrayLike(that, obj);\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data);\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.');\n}\n\nfunction checked(length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' + 'size: 0x' + kMaxLength().toString(16) + ' bytes');\n  }\n\n  return length | 0;\n}\n\nfunction SlowBuffer(length) {\n  if (+length != length) {\n    // eslint-disable-line eqeqeq\n    length = 0;\n  }\n\n  return Buffer.alloc(+length);\n}\n\nBuffer.isBuffer = function isBuffer(b) {\n  return !!(b != null && b._isBuffer);\n};\n\nBuffer.compare = function compare(a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers');\n  }\n\n  if (a === b) return 0;\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) return -1;\n  if (y < x) return 1;\n  return 0;\n};\n\nBuffer.isEncoding = function isEncoding(encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true;\n\n    default:\n      return false;\n  }\n};\n\nBuffer.concat = function concat(list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers');\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0);\n  }\n\n  var i;\n\n  if (length === undefined) {\n    length = 0;\n\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length;\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length);\n  var pos = 0;\n\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i];\n\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers');\n    }\n\n    buf.copy(buffer, pos);\n    pos += buf.length;\n  }\n\n  return buffer;\n};\n\nfunction byteLength(string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length;\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' && (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength;\n  }\n\n  if (typeof string !== 'string') {\n    string = '' + string;\n  }\n\n  var len = string.length;\n  if (len === 0) return 0; // Use a for loop to avoid recursion\n\n  var loweredCase = false;\n\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len;\n\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length;\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2;\n\n      case 'hex':\n        return len >>> 1;\n\n      case 'base64':\n        return base64ToBytes(string).length;\n\n      default:\n        if (loweredCase) return utf8ToBytes(string).length; // assume utf8\n\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n}\n\nBuffer.byteLength = byteLength;\n\nfunction slowToString(encoding, start, end) {\n  var loweredCase = false; // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n\n  if (start === undefined || start < 0) {\n    start = 0;\n  } // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n\n\n  if (start > this.length) {\n    return '';\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length;\n  }\n\n  if (end <= 0) {\n    return '';\n  } // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n\n\n  end >>>= 0;\n  start >>>= 0;\n\n  if (end <= start) {\n    return '';\n  }\n\n  if (!encoding) encoding = 'utf8';\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end);\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end);\n\n      case 'ascii':\n        return asciiSlice(this, start, end);\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end);\n\n      case 'base64':\n        return base64Slice(this, start, end);\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end);\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n        encoding = (encoding + '').toLowerCase();\n        loweredCase = true;\n    }\n  }\n} // The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\n\n\nBuffer.prototype._isBuffer = true;\n\nfunction swap(b, n, m) {\n  var i = b[n];\n  b[n] = b[m];\n  b[m] = i;\n}\n\nBuffer.prototype.swap16 = function swap16() {\n  var len = this.length;\n\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits');\n  }\n\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1);\n  }\n\n  return this;\n};\n\nBuffer.prototype.swap32 = function swap32() {\n  var len = this.length;\n\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits');\n  }\n\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3);\n    swap(this, i + 1, i + 2);\n  }\n\n  return this;\n};\n\nBuffer.prototype.swap64 = function swap64() {\n  var len = this.length;\n\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits');\n  }\n\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7);\n    swap(this, i + 1, i + 6);\n    swap(this, i + 2, i + 5);\n    swap(this, i + 3, i + 4);\n  }\n\n  return this;\n};\n\nBuffer.prototype.toString = function toString() {\n  var length = this.length | 0;\n  if (length === 0) return '';\n  if (arguments.length === 0) return utf8Slice(this, 0, length);\n  return slowToString.apply(this, arguments);\n};\n\nBuffer.prototype.equals = function equals(b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer');\n  if (this === b) return true;\n  return Buffer.compare(this, b) === 0;\n};\n\nBuffer.prototype.inspect = function inspect() {\n  var str = '';\n  var max = exports.INSPECT_MAX_BYTES;\n\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ');\n    if (this.length > max) str += ' ... ';\n  }\n\n  return '<Buffer ' + str + '>';\n};\n\nBuffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer');\n  }\n\n  if (start === undefined) {\n    start = 0;\n  }\n\n  if (end === undefined) {\n    end = target ? target.length : 0;\n  }\n\n  if (thisStart === undefined) {\n    thisStart = 0;\n  }\n\n  if (thisEnd === undefined) {\n    thisEnd = this.length;\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index');\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0;\n  }\n\n  if (thisStart >= thisEnd) {\n    return -1;\n  }\n\n  if (start >= end) {\n    return 1;\n  }\n\n  start >>>= 0;\n  end >>>= 0;\n  thisStart >>>= 0;\n  thisEnd >>>= 0;\n  if (this === target) return 0;\n  var x = thisEnd - thisStart;\n  var y = end - start;\n  var len = Math.min(x, y);\n  var thisCopy = this.slice(thisStart, thisEnd);\n  var targetCopy = target.slice(start, end);\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i];\n      y = targetCopy[i];\n      break;\n    }\n  }\n\n  if (x < y) return -1;\n  if (y < x) return 1;\n  return 0;\n}; // Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\n\n\nfunction bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1; // Normalize byteOffset\n\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset;\n    byteOffset = 0;\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff;\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000;\n  }\n\n  byteOffset = +byteOffset; // Coerce to Number.\n\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : buffer.length - 1;\n  } // Normalize byteOffset: negative offsets start from the end of the buffer\n\n\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1;else byteOffset = buffer.length - 1;\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0;else return -1;\n  } // Normalize val\n\n\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding);\n  } // Finally, search either indexOf (if dir is true) or lastIndexOf\n\n\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1;\n    }\n\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir);\n  } else if (typeof val === 'number') {\n    val = val & 0xFF; // Search for a byte value [0-255]\n\n    if (Buffer.TYPED_ARRAY_SUPPORT && typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);\n      }\n    }\n\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);\n  }\n\n  throw new TypeError('val must be string, number or Buffer');\n}\n\nfunction arrayIndexOf(arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1;\n  var arrLength = arr.length;\n  var valLength = val.length;\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase();\n\n    if (encoding === 'ucs2' || encoding === 'ucs-2' || encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1;\n      }\n\n      indexSize = 2;\n      arrLength /= 2;\n      valLength /= 2;\n      byteOffset /= 2;\n    }\n  }\n\n  function read(buf, i) {\n    if (indexSize === 1) {\n      return buf[i];\n    } else {\n      return buf.readUInt16BE(i * indexSize);\n    }\n  }\n\n  var i;\n\n  if (dir) {\n    var foundIndex = -1;\n\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i;\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex;\n        foundIndex = -1;\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true;\n\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false;\n          break;\n        }\n      }\n\n      if (found) return i;\n    }\n  }\n\n  return -1;\n}\n\nBuffer.prototype.includes = function includes(val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1;\n};\n\nBuffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true);\n};\n\nBuffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false);\n};\n\nfunction hexWrite(buf, string, offset, length) {\n  offset = Number(offset) || 0;\n  var remaining = buf.length - offset;\n\n  if (!length) {\n    length = remaining;\n  } else {\n    length = Number(length);\n\n    if (length > remaining) {\n      length = remaining;\n    }\n  } // must be an even number of digits\n\n\n  var strLen = string.length;\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string');\n\n  if (length > strLen / 2) {\n    length = strLen / 2;\n  }\n\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16);\n    if (isNaN(parsed)) return i;\n    buf[offset + i] = parsed;\n  }\n\n  return i;\n}\n\nfunction utf8Write(buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);\n}\n\nfunction asciiWrite(buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length);\n}\n\nfunction latin1Write(buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length);\n}\n\nfunction base64Write(buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length);\n}\n\nfunction ucs2Write(buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);\n}\n\nBuffer.prototype.write = function write(string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8';\n    length = this.length;\n    offset = 0; // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset;\n    length = this.length;\n    offset = 0; // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0;\n\n    if (isFinite(length)) {\n      length = length | 0;\n      if (encoding === undefined) encoding = 'utf8';\n    } else {\n      encoding = length;\n      length = undefined;\n    } // legacy write(string, encoding, offset, length) - remove in v0.13\n\n  } else {\n    throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');\n  }\n\n  var remaining = this.length - offset;\n  if (length === undefined || length > remaining) length = remaining;\n\n  if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds');\n  }\n\n  if (!encoding) encoding = 'utf8';\n  var loweredCase = false;\n\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length);\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length);\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length);\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length);\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length);\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length);\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n};\n\nBuffer.prototype.toJSON = function toJSON() {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  };\n};\n\nfunction base64Slice(buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf);\n  } else {\n    return base64.fromByteArray(buf.slice(start, end));\n  }\n}\n\nfunction utf8Slice(buf, start, end) {\n  end = Math.min(buf.length, end);\n  var res = [];\n  var i = start;\n\n  while (i < end) {\n    var firstByte = buf[i];\n    var codePoint = null;\n    var bytesPerSequence = firstByte > 0xEF ? 4 : firstByte > 0xDF ? 3 : firstByte > 0xBF ? 2 : 1;\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint;\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte;\n          }\n\n          break;\n\n        case 2:\n          secondByte = buf[i + 1];\n\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | secondByte & 0x3F;\n\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint;\n            }\n          }\n\n          break;\n\n        case 3:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | thirdByte & 0x3F;\n\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint;\n            }\n          }\n\n          break;\n\n        case 4:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n          fourthByte = buf[i + 3];\n\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | fourthByte & 0x3F;\n\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint;\n            }\n          }\n\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD;\n      bytesPerSequence = 1;\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000;\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800);\n      codePoint = 0xDC00 | codePoint & 0x3FF;\n    }\n\n    res.push(codePoint);\n    i += bytesPerSequence;\n  }\n\n  return decodeCodePointsArray(res);\n} // Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\n\n\nvar MAX_ARGUMENTS_LENGTH = 0x1000;\n\nfunction decodeCodePointsArray(codePoints) {\n  var len = codePoints.length;\n\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints); // avoid extra slice()\n  } // Decode in chunks to avoid \"call stack size exceeded\".\n\n\n  var res = '';\n  var i = 0;\n\n  while (i < len) {\n    res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));\n  }\n\n  return res;\n}\n\nfunction asciiSlice(buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F);\n  }\n\n  return ret;\n}\n\nfunction latin1Slice(buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i]);\n  }\n\n  return ret;\n}\n\nfunction hexSlice(buf, start, end) {\n  var len = buf.length;\n  if (!start || start < 0) start = 0;\n  if (!end || end < 0 || end > len) end = len;\n  var out = '';\n\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i]);\n  }\n\n  return out;\n}\n\nfunction utf16leSlice(buf, start, end) {\n  var bytes = buf.slice(start, end);\n  var res = '';\n\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n  }\n\n  return res;\n}\n\nBuffer.prototype.slice = function slice(start, end) {\n  var len = this.length;\n  start = ~~start;\n  end = end === undefined ? len : ~~end;\n\n  if (start < 0) {\n    start += len;\n    if (start < 0) start = 0;\n  } else if (start > len) {\n    start = len;\n  }\n\n  if (end < 0) {\n    end += len;\n    if (end < 0) end = 0;\n  } else if (end > len) {\n    end = len;\n  }\n\n  if (end < start) end = start;\n  var newBuf;\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end);\n    newBuf.__proto__ = Buffer.prototype;\n  } else {\n    var sliceLen = end - start;\n    newBuf = new Buffer(sliceLen, undefined);\n\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start];\n    }\n  }\n\n  return newBuf;\n};\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\n\n\nfunction checkOffset(offset, ext, length) {\n  if (offset % 1 !== 0 || offset < 0) throw new RangeError('offset is not uint');\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length');\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n\n  return val;\n};\n\nBuffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length);\n  }\n\n  var val = this[offset + --byteLength];\n  var mul = 1;\n\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul;\n  }\n\n  return val;\n};\n\nBuffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  return this[offset];\n};\n\nBuffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] | this[offset + 1] << 8;\n};\n\nBuffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] << 8 | this[offset + 1];\n};\n\nBuffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 0x1000000;\n};\n\nBuffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] * 0x1000000 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);\n};\n\nBuffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n\n  mul *= 0x80;\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n  return val;\n};\n\nBuffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  var i = byteLength;\n  var mul = 1;\n  var val = this[offset + --i];\n\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul;\n  }\n\n  mul *= 0x80;\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n  return val;\n};\n\nBuffer.prototype.readInt8 = function readInt8(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  if (!(this[offset] & 0x80)) return this[offset];\n  return (0xff - this[offset] + 1) * -1;\n};\n\nBuffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset] | this[offset + 1] << 8;\n  return val & 0x8000 ? val | 0xFFFF0000 : val;\n};\n\nBuffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset + 1] | this[offset] << 8;\n  return val & 0x8000 ? val | 0xFFFF0000 : val;\n};\n\nBuffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;\n};\n\nBuffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];\n};\n\nBuffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return ieee754.read(this, offset, true, 23, 4);\n};\n\nBuffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return ieee754.read(this, offset, false, 23, 4);\n};\n\nBuffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return ieee754.read(this, offset, true, 52, 8);\n};\n\nBuffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return ieee754.read(this, offset, false, 52, 8);\n};\n\nfunction checkInt(buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance');\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds');\n  if (offset + ext > buf.length) throw new RangeError('Index out of range');\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  var mul = 1;\n  var i = 0;\n  this[offset] = value & 0xFF;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = value / mul & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  var i = byteLength - 1;\n  var mul = 1;\n  this[offset + i] = value & 0xFF;\n\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = value / mul & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n  this[offset] = value & 0xff;\n  return offset + 1;\n};\n\nfunction objectWriteUInt16(buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1;\n\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & 0xff << 8 * (littleEndian ? i : 1 - i)) >>> (littleEndian ? i : 1 - i) * 8;\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n  } else {\n    objectWriteUInt16(this, value, offset, true);\n  }\n\n  return offset + 2;\n};\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 8;\n    this[offset + 1] = value & 0xff;\n  } else {\n    objectWriteUInt16(this, value, offset, false);\n  }\n\n  return offset + 2;\n};\n\nfunction objectWriteUInt32(buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1;\n\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = value >>> (littleEndian ? i : 3 - i) * 8 & 0xff;\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = value >>> 24;\n    this[offset + 2] = value >>> 16;\n    this[offset + 1] = value >>> 8;\n    this[offset] = value & 0xff;\n  } else {\n    objectWriteUInt32(this, value, offset, true);\n  }\n\n  return offset + 4;\n};\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 24;\n    this[offset + 1] = value >>> 16;\n    this[offset + 2] = value >>> 8;\n    this[offset + 3] = value & 0xff;\n  } else {\n    objectWriteUInt32(this, value, offset, false);\n  }\n\n  return offset + 4;\n};\n\nBuffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  var i = 0;\n  var mul = 1;\n  var sub = 0;\n  this[offset] = value & 0xFF;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1;\n    }\n\n    this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  var i = byteLength - 1;\n  var mul = 1;\n  var sub = 0;\n  this[offset + i] = value & 0xFF;\n\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1;\n    }\n\n    this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n  if (value < 0) value = 0xff + value + 1;\n  this[offset] = value & 0xff;\n  return offset + 1;\n};\n\nBuffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n  } else {\n    objectWriteUInt16(this, value, offset, true);\n  }\n\n  return offset + 2;\n};\n\nBuffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 8;\n    this[offset + 1] = value & 0xff;\n  } else {\n    objectWriteUInt16(this, value, offset, false);\n  }\n\n  return offset + 2;\n};\n\nBuffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n    this[offset + 2] = value >>> 16;\n    this[offset + 3] = value >>> 24;\n  } else {\n    objectWriteUInt32(this, value, offset, true);\n  }\n\n  return offset + 4;\n};\n\nBuffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  if (value < 0) value = 0xffffffff + value + 1;\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 24;\n    this[offset + 1] = value >>> 16;\n    this[offset + 2] = value >>> 8;\n    this[offset + 3] = value & 0xff;\n  } else {\n    objectWriteUInt32(this, value, offset, false);\n  }\n\n  return offset + 4;\n};\n\nfunction checkIEEE754(buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range');\n  if (offset < 0) throw new RangeError('Index out of range');\n}\n\nfunction writeFloat(buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38);\n  }\n\n  ieee754.write(buf, value, offset, littleEndian, 23, 4);\n  return offset + 4;\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert);\n};\n\nBuffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert);\n};\n\nfunction writeDouble(buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308);\n  }\n\n  ieee754.write(buf, value, offset, littleEndian, 52, 8);\n  return offset + 8;\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert);\n};\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert);\n}; // copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\n\n\nBuffer.prototype.copy = function copy(target, targetStart, start, end) {\n  if (!start) start = 0;\n  if (!end && end !== 0) end = this.length;\n  if (targetStart >= target.length) targetStart = target.length;\n  if (!targetStart) targetStart = 0;\n  if (end > 0 && end < start) end = start; // Copy 0 bytes; we're done\n\n  if (end === start) return 0;\n  if (target.length === 0 || this.length === 0) return 0; // Fatal error conditions\n\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds');\n  }\n\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds');\n  if (end < 0) throw new RangeError('sourceEnd out of bounds'); // Are we oob?\n\n  if (end > this.length) end = this.length;\n\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start;\n  }\n\n  var len = end - start;\n  var i;\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else {\n    Uint8Array.prototype.set.call(target, this.subarray(start, start + len), targetStart);\n  }\n\n  return len;\n}; // Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\n\n\nBuffer.prototype.fill = function fill(val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start;\n      start = 0;\n      end = this.length;\n    } else if (typeof end === 'string') {\n      encoding = end;\n      end = this.length;\n    }\n\n    if (val.length === 1) {\n      var code = val.charCodeAt(0);\n\n      if (code < 256) {\n        val = code;\n      }\n    }\n\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string');\n    }\n\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding);\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255;\n  } // Invalid ranges are not set to a default, so can range check early.\n\n\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index');\n  }\n\n  if (end <= start) {\n    return this;\n  }\n\n  start = start >>> 0;\n  end = end === undefined ? this.length : end >>> 0;\n  if (!val) val = 0;\n  var i;\n\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val;\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val) ? val : utf8ToBytes(new Buffer(val, encoding).toString());\n    var len = bytes.length;\n\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len];\n    }\n  }\n\n  return this;\n}; // HELPER FUNCTIONS\n// ================\n\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g;\n\nfunction base64clean(str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, ''); // Node converts strings with length < 2 to ''\n\n  if (str.length < 2) return ''; // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n\n  while (str.length % 4 !== 0) {\n    str = str + '=';\n  }\n\n  return str;\n}\n\nfunction stringtrim(str) {\n  if (str.trim) return str.trim();\n  return str.replace(/^\\s+|\\s+$/g, '');\n}\n\nfunction toHex(n) {\n  if (n < 16) return '0' + n.toString(16);\n  return n.toString(16);\n}\n\nfunction utf8ToBytes(string, units) {\n  units = units || Infinity;\n  var codePoint;\n  var length = string.length;\n  var leadSurrogate = null;\n  var bytes = [];\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i); // is surrogate component\n\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue;\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue;\n        } // valid lead\n\n\n        leadSurrogate = codePoint;\n        continue;\n      } // 2 leads in a row\n\n\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n        leadSurrogate = codePoint;\n        continue;\n      } // valid surrogate pair\n\n\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n    }\n\n    leadSurrogate = null; // encode utf8\n\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break;\n      bytes.push(codePoint);\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break;\n      bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break;\n      bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break;\n      bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n    } else {\n      throw new Error('Invalid code point');\n    }\n  }\n\n  return bytes;\n}\n\nfunction asciiToBytes(str) {\n  var byteArray = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF);\n  }\n\n  return byteArray;\n}\n\nfunction utf16leToBytes(str, units) {\n  var c, hi, lo;\n  var byteArray = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break;\n    c = str.charCodeAt(i);\n    hi = c >> 8;\n    lo = c % 256;\n    byteArray.push(lo);\n    byteArray.push(hi);\n  }\n\n  return byteArray;\n}\n\nfunction base64ToBytes(str) {\n  return base64.toByteArray(base64clean(str));\n}\n\nfunction blitBuffer(src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if (i + offset >= dst.length || i >= src.length) break;\n    dst[i + offset] = src[i];\n  }\n\n  return i;\n}\n\nfunction isnan(val) {\n  return val !== val; // eslint-disable-line no-self-compare\n}"],"sourceRoot":""}