{"version":3,"file":"picostate-react.es.js","sources":["../Context.js","../Provider.js","../Connect.js","../Hook.js"],"sourcesContent":["import React from 'react'\n\nexport const Context = React.createContext({})\nexport const Provider = Context.Provider\nexport const Consumer = Context.Consumer\n","import React from 'react'\nimport { Provider as ContextProvider } from './Context.js'\n\nexport class Picostate extends React.Component {\n  constructor (props) {\n    super(props)\n\n    if (!props.store) {\n      throw new Error('@picostate/react was not provided with a picostate store')\n    }\n\n    props.store.listen(this.setState.bind(this))\n  }\n\n  render () {\n    const { store, children } = this.props\n\n    return (\n      <ContextProvider value={{ store }}>\n        {children}\n      </ContextProvider>\n    )\n  }\n}\n","import React from 'react'\nimport { Consumer } from './Context.js'\n\nexport function connect (mapStateToProps, actions) {\n  if (typeof mapStateToProps === 'object') {\n    actions = mapStateToProps\n    mapStateToProps = undefined\n  }\n\n  return function wrapComponentWithState (Component) {\n    return props => (\n      <Consumer>\n        {({ store }) => {\n          const wrappedActions = Object.keys(actions || {}).reduce((obj, key) => {\n            obj[key] = (...args) => actions[key](store.hydrate.bind(store), ...args)\n            return obj\n          }, {})\n\n          return (\n            <Component {...Object.assign(\n              {},\n              props,\n              mapStateToProps ? mapStateToProps(store.state, props) : {},\n              wrappedActions,\n              { hydrate: store.hydrate.bind(store) }\n            )} />\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n","import React, { useState, useContext } from 'react'\nimport { Context } from './Context.js'\n\nexport function usePicostate (mapStateToProps, actions) {\n  if (typeof mapStateToProps === 'object') {\n    actions = mapStateToProps\n    mapStateToProps = undefined\n  }\n\n  const { store } = useContext(Context)\n\n  const wrappedActions = Object.keys(actions || {}).reduce((obj, key) => {\n    obj[key] = (...args) => actions[key](store.hydrate.bind(store), ...args)\n    return obj\n  }, {})\n\n  return [\n    mapStateToProps ? mapStateToProps(store.state) : store.state,\n    wrappedActions\n  ]\n}\n"],"names":["const","Context","React","createContext","Provider","Consumer","Picostate","constructor","props","store","Error","listen","this","setState","bind","render","ContextProvider","value","Component","connect","mapStateToProps","actions","undefined","ref","wrappedActions","Object","keys","reduce","obj","key","hydrate","args","assign","state","usePicostate","useContext"],"mappings":"sCAEOA,IAAMC,EAAUC,EAAMC,cAAc,IAC9BC,EAAWH,EAAQG,SACnBC,EAAWJ,EAAQI,SCDnBC,cACXC,WAAaC,kBACLA,IAEDA,EAAMC,YACH,IAAIC,MAAM,4DAGlBF,EAAMC,MAAME,OAAOC,KAAKC,SAASC,KAAKF,uGAGxCG,wBAC8BH,KAAKJ,aAG/BN,gBAACc,GAAgBC,MAAO,iCAfCf,EAAMgB,WCA9B,SAASC,EAASC,EAAiBC,SACT,iBAApBD,IACTC,EAAUD,EACVA,OAAkBE,GAGb,SAAiCJ,mBAC/BV,UACLN,gBAACG,OACC,SAAEkB,iBACMC,EAAiBC,OAAOC,KAAKL,GAAW,IAAIM,gBAAQC,EAAKC,UAC7DD,EAAIC,4EAAoBR,EAAQQ,YAAKpB,EAAMqB,QAAQhB,KAAKL,WAAWsB,KAC5DH,GACN,WAGD1B,gBAACgB,EAAUO,OAAWO,OACpB,GACAxB,EACAY,EAAkBA,EAAgBX,EAAMwB,MAAOzB,GAAS,GACxDgB,EACA,CAAEM,QAASrB,EAAMqB,QAAQhB,KAAKL,UCrBrC,SAASyB,EAAcd,EAAiBC,GACd,iBAApBD,IACTC,EAAUD,EACVA,OAAkBE,SAGFa,EAAWlC,SAEvBuB,EAAiBC,OAAOC,KAAKL,GAAW,IAAIM,gBAAQC,EAAKC,UAC7DD,EAAIC,4EAAoBR,EAAQQ,YAAKpB,EAAMqB,QAAQhB,KAAKL,WAAWsB,KAC5DH,GACN,UAEI,CACLR,EAAkBA,EAAgBX,EAAMwB,OAASxB,EAAMwB,MACvDT"}