declare type HydrateFunction<S> = (s: S) => Partial<S>;
declare type Hydrate<S> = Partial<S> | HydrateFunction<S>;
declare type ListenerFunction<S> = (s: S) => any;
export default function createStore<State>(initialState: Partial<State>): {
    readonly state: Partial<State>;
    hydrate(fn?: Hydrate<State>): () => void;
    listen(evs: string | ListenerFunction<State> | string[], fn?: ListenerFunction<State>): () => void;
};
export {};
